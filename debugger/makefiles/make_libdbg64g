###
## @file
## @copyright  Copyright 2016 GNSS Sensor Ltd. All right reserved.
## @author     Sergey Khabarov - sergeykhbr@gmail.com
##

include util.mak

CC=gcc
CPP=gcc
CFLAGS=-g -c -Wall -Werror -fPIC -pthread
LDFLAGS= -shared -pthread
INCL_KEY=-I
DIR_KEY=-B


# include sub-folders list
INCL_PATH=\
	$(TOP_DIR)src/common \
	$(TOP_DIR)src/libdbg64g

# source files directories list:
SRC_PATH =\
	$(TOP_DIR)src \
	$(TOP_DIR)src/common \
	$(TOP_DIR)src/common/debug \
	$(TOP_DIR)src/common/generic \
	$(TOP_DIR)src/libdbg64g \
	$(TOP_DIR)src/libdbg64g/services/comport \
	$(TOP_DIR)src/libdbg64g/services/console \
	$(TOP_DIR)src/libdbg64g/services/debug \
	$(TOP_DIR)src/libdbg64g/services/debug/dsu \
	$(TOP_DIR)src/libdbg64g/services/debug/dmi \
	$(TOP_DIR)src/libdbg64g/services/elfloader \
	$(TOP_DIR)src/libdbg64g/services/exec \
	$(TOP_DIR)src/libdbg64g/services/exec/cmd \
	$(TOP_DIR)src/libdbg64g/services/mem \
	$(TOP_DIR)src/libdbg64g/services/remote

VPATH = $(SRC_PATH)

SOURCES = \
	attribute \
	autobuffer \
	api_core \
	core \
	mapreg \
	bus_generic \
	mem_generic \
	rmembank_gen1 \
	memlut \
	memsim \
	rmemsim \
	dmi_regs \
	codecov_generic \
	cpumonitor \
	dsu \
	dsu_regs \
	edcl \
	greth_gen1 \
	greth \
	serial_dbglink \
	udp_dbglink \
	elfreader \
	cmd_dsu_busutil \
	cmd_dsu_halt \
	cmd_dsu_isrunning \
	cmd_dsu_run \
	cmd_dsu_status \
	cmd_cpi \
	cmd_cpucontext \
	cmd_disas \
	cmd_elf2raw \
	cmd_exit \
	cmd_loadbin \
	cmd_loadelf \
	cmd_loadsrec \
	cmd_loadh86 \
	cmd_log \
	cmd_memdump \
	cmd_read \
	cmd_reset \
	cmd_stack \
	cmd_symb \
	cmd_write \
	cmdexec \
	console \
	com_linux \
	comport \
	autocompleter \
	dpiclient \
	tcpclient \
	tcpjtagbb \
	tcpcmd_gen \
	jsoncmd \
	gdbcmd \
	tcpserver

LIBS = \
	m \
	stdc++ \
	dl

SRC_FILES = $(addsuffix .cpp,$(SOURCES))
OBJ_FILES = $(addprefix $(OBJ_DIR)/,$(addsuffix .o,$(SOURCES)))
EXECUTABLE = $(addprefix $(ELF_DIR)/,libdbg64g.so)

all: $(EXECUTABLE)

$(EXECUTABLE): $(OBJ_FILES)
	echo $(CPP) $(LDFLAGS) $(OBJ_FILES) -o $@
	$(CPP) $(LDFLAGS) $(OBJ_FILES) -o $@ $(addprefix -l,$(LIBS))
	$(ECHO) "\n  Debugger Core Library has been built successfully.\n"

$(addprefix $(OBJ_DIR)/,%.o): %.cpp
	echo $(CPP) $(CFLAGS) -std=c++0x $(addprefix $(INCL_KEY),$(INCL_PATH)) $< -o $@
	$(CPP) $(CFLAGS) -std=c++0x $(addprefix $(INCL_KEY),$(INCL_PATH)) $< -o $@

$(addprefix $(OBJ_DIR)/,%.o): %.c
	echo $(CC) $(CFLAGS) -std=c99 $(addprefix $(INCL_KEY),$(INCL_PATH)) $< -o $@
	$(CC) $(CFLAGS) -std=c99 $(addprefix $(INCL_KEY),$(INCL_PATH)) $< -o $@
